
/*
id,    core,    est,    wcet,    dl, type ;
#define TASKTYPE_PERIODIC 0
#define TASKTYPE_APERIODIC 2

***Description****
schedule which triggers lots of splitting of intervals.
when executed with shortening of DL version of online phase, projects the runtime performance gain 

Similar to reasonableSchedule004. More discrete arrival time of periodics  and aperiodics
Gives a spreaded runtime overhead graph



**EXP 2  FILE   requirements and solutions**

1.splitting of interval --> DL of aperiodic != DL of any interval
2.while shifting , maximum tasks and intervals should be shifted -- > intervals with 5 tasks having DLs > aperiodic.DL
3.possibility of shortening the DL --> wcet of aperiodic is satisfied in first intervals. --> 
    DL is shortened to the previous intervals END. so that no splitting is required ==> the tasks in the intervals > the DL of aperiodics need not be shifted

id,    core,    est,    wcet,    dl, type ; */

LCM:100;
Cores:1;
Tasks:14;
Task:0,1,0,10,25;

Task:1,1,50,5,100;
Task:2,1,51,5,100;
Task:3,1,52,5,100;

Task:4,1,60,5,80;
Task:5,1,61,5,80;
Task:6,1,62,5,80;

Task:7,1,40,5,60;
Task:8,1,41,5,60;
Task:9,1,42,5,60;




Task:10,1,5,2,50,2; /**/
Task:11,1,23,2,70,2; /**/
Task:12,1,38,2,75,2; /**/
/* Task:10,1,57,2,85,2; */
Task:13,1,69,2,90,2; /**/

